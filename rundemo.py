#!/usr/bin/env python

"""
author: Lu LIU
created at: 2014-07-25
Description:
    a sample of how to use pymmrouting to find multimodal shortest paths
"""

from pymmrouting import routeplanner
from pymmrouting import datamodel
from pymmrouting import inferenceengine

# For multimodal routing, a bunch of options are necessary other than routing
# origin and destination. The acceptable format of multimodal routing options
# are stored in a JSON file.
inferer = inferenceengine.RoutingPlanInferer()
inferer.load_routing_options('./multimodal_routing_options.json')
# Routing plans of multimodal paths calculation can be generated by the
# inference engine with the routing options as inputs
routing_plans = inferer.generate_routing_plan()

# A multimodal network data model is necessary for multimodal path finding. It
# loads network dataset from external sources, e.g. PostgreSQL database, plain
# text file, etc.
mm_dataset = datamodel.MultimodalNetwork()
# In this sample, the multimodal graph data set is stored in PostgreSQL database
mm_dataset.connect_db(
    "dbname = 'sample_multimodal_db' user = 'user' password = 'password'")
# A multimodal network is assembled on-the-fly according to a concrete routing
# plan
for p in routing_plans:
    # FIXME: should be coordinates
    p.source = 100201021234
    p.target = 100201034567
    mm_dataset.assemble_networks(p)
    # A route planner instance should be created with a multimodal dataset
    # object
    route_planner = routeplanner.RoutePlanner(mm_dataset)
    result = route_planner.find_path(p)
    # Routing results contain all information related to the found paths which
    # can be rendered on top of a base map like MapBox
    result.show_on_map('MAPBOX')
